!function(){"use strict";angular.module("aeon-ui",[])}(),function(){"use strict";var a=function(a){var b=this;b.$onInit=function(){angular.isNumber(b.minLength)||(b.minLength=3),angular.isNumber(b.maxTags)||(b.maxTags=5),angular.isUndefined(b.selectionLabel)&&(b.selectionLabel="Select elements containing:"),angular.isUndefined(b.selectAllLabel)&&(b.selectAllLabel="Include"),angular.isUndefined(b.unselectAllLabel)&&(b.unselectAllLabel="Exclude"),angular.isUndefined(b.emptyLabel)&&(b.emptyLabel="No result"),angular.isUndefined(b.itemsLengthLabel)&&(b.itemsLengthLabel="Number of items:")};var c=function(){var c=a("filter")(b.ngModel,{selected:!0});b.ngChange({value:c})},d=function(a){a.selected=!1,c()},e=function(){angular.forEach(b.ngModel,function(a){a.selected=!1}),c()},f=function(d){var e=a("filter")(b.ngModel,{name:b.searchValue});angular.forEach(e,function(a){a.selected=d}),c()};b.fn={updateModel:c,unselectItem:d,unselectAll:e,selectFilteredAll:f}},b={require:"ngModel",bindings:{minLength:"@",maxTags:"@",placeholder:"@",emptyLabel:"@",selectionLabel:"@",selectAllLabel:"@",unselectAllLabel:"@",itemsLengthLabel:"@",ngModel:"<",ngChange:"&"},template:['<div class="checklist">','<div class="checklist-result form-group">',"<p>{{ component.itemsLengthLabel }} <strong>{{ (component.ngModel | filter: { name: component.searchValue }).length + '/' + component.ngModel.length }}</strong></p>","</div>",'<div class="checklist-search form-group has-feedback">','<input class="form-control input-rounded" placeholder="{{ component.placeholder }}" type="text" ','ng-minlength="minLength" ng-model="component.searchValue" autocomplete="off">','<span class="fa fa-search form-control-feedback" aria-hidden="true"></span>',"</div>",'<div class="checklist-selection form-group" ng-show="component.searchValue">',"<p>","{{ component.selectionLabel }} &laquo;<strong>{{ component.searchValue }}</strong>&raquo;<br />",'<button type="button" class="btn btn-xs btn-default" ng-click="component.fn.selectFilteredAll(true)">{{ component.selectAllLabel }}</button> ','<button type="button" class="btn btn-xs btn-default" ng-click="component.fn.selectFilteredAll(false)">{{ component.unselectAllLabel }}</button>',"</p>","</div>",'<div class="form-group checkbox-list checkbox-list-bordered">','<div class="checkbox checkbox-custom" ng-repeat="item in component.ngModel | filter: { name: component.searchValue }">',"<label>",'<input type="checkbox" value="{{ item.value }}" ng-model="item.selected" ng-change="component.fn.updateModel()">',"<span>{{ item.name }}</span>","</label>","</div>",'<p ng-if="!(component.ngModel | filter: { name: component.searchValue }).length">{{ component.emptyLabel }}</p>',"</div>",'<div class="tags form-group" ng-show="(component.ngModel | filter: { selected: true }).length">','<button type="button" class="btn btn-sm btn-link tag" ','ng-repeat="item in component.ngModel | filter: { selected: true } | limitTo: component.maxTags" ng-click="component.fn.unselectItem(item)">','{{ item.name }}<i class="fa fa-times"></i>',"</button>",'<span class="btn btn-sm btn-link tag-overflow" ng-if="(component.ngModel | filter: { selected: true }).length > component.maxTags">+{{ ((component.ngModel | filter: { selected: true }).length - component.maxTags) }}</span>','<button type="button" class="btn btn-sm btn-primary tag-clear" ','ng-click="component.fn.unselectAll()">','<i class="fa fa-times"></i>',"</button>","</div>","</div>"].join(""),controller:a,controllerAs:"component"};a.$inject=["$filter"],angular.module("aeon-ui").component("uiChecklist",b)}(),function(){"use strict";var a=function(){var a=this,b=function(b){if(!angular.isNumber(b))throw new Error("ng-model is not a Number");var c=b-a.valueMin,d=a.valueMax-a.valueMin;a.valuePercent=Math.round(c/d*100)};a.$onInit=function(){if(angular.isNumber(a.valueMin))throw new Error("value-min is not a Number");if(angular.isNumber(a.valueMax))throw new Error("value-max is not a Number");a.valuePercent=0,b(a.ngModel)},a.$onChanges=function(){b(a.ngModel)},a.fn={updatePercent:b}},b={require:"ngModel",bindings:{ngModel:"<",valueMin:"@",valueMax:"@",variantClass:"@"},template:['<div class="progression">','<dl class="progress-header">','<dt class="progress-label">{{ component.valuePercent }}%</dt>','<dd class="progress-desc">{{ component.ngModel }}/{{ component.valueMax }}</dd>',"</dl>",'<div class="progress">','<div class="progress-bar {{ component.variantClass }}" role="progressbar" aria-valuenow="{{ component.ngModel }}" aria-valuemin="{{ component.valueMin }}" aria-valuemax="{{ component.valueMax }}" style="width: {{ component.valuePercent }}%;">','<span class="sr-only">{{ component.valuePercent }}%</span>',"</div>","</div>","</div>"].join(""),controller:a,controllerAs:"component"};angular.module("aeon-ui").component("uiProgression",b)}(),function(){"use strict";var a=function(a){var b=function(b,c){var d={id:c[0].id,title:b.title||angular.element(c[0]).text(),error:b.error,value:b.value,offset:0,isHidden:angular.isUndefined(b.isHidden),isGroup:angular.isDefined(b.isGroup),isHeader:angular.isDefined(b.isHeader)};c.offset=function(){var a=this[0],b=document.documentElement||document.body,c=window.pageXOffset||b.scrollLeft,d=window.pageYOffset||b.scrollTop;return{left:a.getBoundingClientRect().left+c,top:a.getBoundingClientRect().top+d}},b.$watch(function(){return c.offset().top},function(b){d.offset=b,a.reorder(d)}),a.add(d),b.$watch("value",function(b){d.value=b,a.update(d)}),b.$watch("error",function(b){d.error=b,a.update(d)}),b.$watch("isHidden",function(b){d.isHidden=b,a.update(d)}),b.$on("$destroy",function(){a.delete(d)})};return{restrict:"A",scope:{title:"@",error:"=anchorError",value:"=anchorValue",isHidden:"=",isGroup:"@",isHeader:"@"},link:b}},b=function(a){var b={},c=[];return b.get=function(){return c},b.add=function(a){c.push(a)},b.update=function(a){var b=c.indexOf(a);b>-1&&(c[b]=a)},b.delete=function(a){var b=c.indexOf(a);b>-1&&c.splice(b,1)},b.reorder=function(){c=a("orderBy")(c,"offset")},b},c=function(a,b,c){var d=this;a.yOffset=Math.max(parseInt(d.scrollOffset),0);var e=function(c){c.preventDefault();var d=c.target.getAttribute("href").replace("#","");return b.hash(d),a(),!1};d.fn={getAnchors:c.get,scrollTo:e}},d={bindings:{scrollOffset:"@"},template:['<div class="summary">','<dl class="summary-list">','<dt ng-repeat-start="anchor in component.fn.getAnchors()" ng-if="!anchor.isHidden" data-href="#{{ anchor.id }}" ',"ng-class=\"{ 'summary-header': anchor.isHeader, 'summary-title': anchor.isGroup, 'is-empty': (!anchor.value && !anchor.isGroup), 'has-error': anchor.error }\">",'<a ng-if="anchor.id" href="#{{ anchor.id }}" ng-click="component.fn.scrollTo($event)">{{ anchor.title }}</a>','<span ng-if="!anchor.id">{{ anchor.title }}</span>',"</dt>",'<dd ng-repeat-end ng-if="anchor.value && !anchor.isHidden">',"<pre>{{ anchor.value }}</pre>","</dd>","</dl>","</div>"].join(""),controller:c,controllerAs:"component"};a.$inject=["AnchorsFactory"],b.$inject=["$filter"],c.$inject=["$anchorScroll","$location","AnchorsFactory"],angular.module("aeon-ui").directive("uiAnchor",a).factory("AnchorsFactory",b).component("uiSummary",d)}(),function(){"use strict";var a=function(){var a=this;a.$onInit=function(){a.isRequired=angular.isDefined(a.required)}},b={require:"ngModel",bindings:{ngModel:"=",ngChange:"&",name:"@",required:"@isRequired",labelOn:"@",labelOff:"@",variantClass:"@"},template:['<div class="switch {{ variantClass }}" ng-class="{ \'active\': component.ngModel }">','<label class="switch-label" ng-class="{ \'focus\': component.hasFocus }">','<input name="{{ component.name }}" class="switch-control" type="checkbox" ng-model="component.ngModel" ng-required="component.isRequired" ng-change="component.ngChange({ value: component.ngModel })" ng-focus="component.hasFocus = true" ng-blur="component.hasFocus = false">','<span class="switch-bullet"></span>','<span class="switch-off" ng-if="component.labelOff.length" ng-bind="component.labelOff"></span>','<span class="switch-on" ng-if="component.labelOn.length" ng-bind="component.labelOn"></span>',"</label>","</div>"].join(""),controller:a,controllerAs:"component"};angular.module("aeon-ui").component("uiSwitch",b)}(),function(){"use strict";var a=function(a,b){var c=this;c.$onInit=function(){c.test=!0,angular.isNumber(c.maxTags)||(c.maxTags=5),angular.forEach(c.ngModel,function(a){a.selected=!0})};var d=function(){var a=b("filter")(c.ngModel,{selected:!1});c.ngChange({value:a})},e=function(a){a.selected=!1,d()},f=function(){angular.forEach(c.ngModel,function(a){a.selected=!1}),d()};c.fn={unselectItem:e,unselectAll:f}},b={require:"ngModel",bindings:{ngModel:"<",ngChange:"&",maxTags:"@"},template:['<div class="tags" ng-show="(component.ngModel | filter: { selected: true }).length">','<button type="button" class="btn btn-sm btn-link tag" ','ng-repeat="item in component.ngModel | filter: { selected: true } | limitTo: component.maxTags" ng-click="component.fn.unselectItem(item)">','{{ item.name }}<i class="fa fa-times"></i>',"</button>",'<span class="btn btn-sm btn-link tag-overflow" ng-if="(component.ngModel | filter: { selected: true }).length > component.maxTags">+{{ (component.ngModel | filter: { selected: false }).length - component.maxTags }}</span>','<button type="button" class="btn btn-sm btn-primary tag-clear" ','ng-click="component.fn.unselectAll()">','<i class="fa fa-times"></i>',"</button>","</div>"].join(""),controller:a,controllerAs:"component"};a.$inject=["$scope","$filter"],angular.module("aeon-ui").component("uiTags",b)}(),function(){"use strict";var a=function(a){var b=this;b.$onInit=function(){angular.isUndefined(b.minLength)&&(b.minLength=3),b.isEmpty=!1},b.fn={getNbResult:function(c){var d=0;angular.forEach(b.ngModel,function(b){d+=a("filter")(b.values,c).length}),b.isEmpty=0===d},initSelectedValues:function(a){angular.isObject(a.selected)||(a.selected={})},unselectItem:function(a,c){a.selected[c]=!1,b.ngChange({value:b.ngModel})}}},b={require:"ngModel",bindings:{minLength:"@",placeholder:"@",emptyLabel:"@",ngModel:"<",ngChange:"&"},template:['<div class="treeview">','<div class="treeview-search form-group has-feedback">','<input class="form-control input-rounded" placeholder="{{ component.placeholder }}" type="text" ','ng-minlength="component.minLength" ng-model="component.searchValue" ng-change="component.fn.getNbResult(component.searchValue)" autocomplete="off">','<span class="fa fa-search form-control-feedback" aria-hidden="true"></span>',"</div>",'<div class="form-group">','<ul class="treeview-list treeview-list-bordered">','<li ng-repeat="item in component.ngModel" ','ng-if="(item.values | filter: component.searchValue).length" ','ng-class="{ \'open\': !item.collapse }" ng-init="component.fn.initSelectedValues(item)">','<button type="button" class="treeview-btn" ng-click="item.collapse = !item.collapse">','<span class="toggle"><i class="fa fa-caret-right" aria-hidden="true"></i></span>','<span class="link" ng-bind="item.name"></span>',"</button>",'<ul class="treeview-container">','<li ng-repeat="value in item.values | filter: component.searchValue" class="treeview-checkbox checkbox checkbox-custom">',"<label>",'<input type="checkbox" ng-model="item.selected[value]" ng-change="component.ngChange({ value: component.ngModel })">','<span ng-bind="value"></span>',"</label>","</li>","</ul>","</li>",'<li ng-if="component.isEmpty">{{ component.emptyLabel }}</li>',"</ul>","</div>",'<div class="tags form-group">','<span ng-repeat="item in component.ngModel">','<button type="button" class="btn btn-sm btn-link tag" ','ng-repeat="(key, value) in item.selected" ng-show="value" ng-click="component.fn.unselectItem(item, key)">','{{ key }}<i class="fa fa-times"></i>',"</button>","</span>","</div>","</div>"].join(""),controller:a,controllerAs:"component"};a.$inject=["$filter"],angular.module("aeon-ui").component("uiTreeview",b)}(),function(){"use strict";var a=function(a,b){var c=this,d=new b.FileReader;c.$onInit=function(){c.background=null,c.isRequired=angular.isDefined(c.required),angular.isFunction(c.onProgress)&&(d.onprogress=c.onProgress),angular.isFunction(c.onError)&&(d.onerror=c.onError)};var e=function(a){var b={};return angular.isDefined(c.size)&&a.size>parseInt(c.size)&&(b.size=!0),b},f=function(b){var f=e(b.files[0]);console.log(a),Object.keys(f).length?(c.isActive=!1,c.hasError=!0,c.background=null,angular.isFunction(c.onError)&&c.onError(f)):(c.isActive=!0,c.hasError=!1,d.readAsDataURL(b.files[0]),angular.isFunction(c.ngChange)&&c.ngChange({value:b.files[0]})),a.$apply()},g=function(b){a.$apply(function(){c.background="url("+d.result+")"}),angular.isFunction(c.onLoad)&&c.onLoad(b)};d.onload=g,a.onChange=f},b={require:"ngModel",transclude:!0,bindings:{ngModel:"<",ngChange:"&",name:"@",accept:"@",size:"@",required:"@isRequired",variantClass:"@",onLoad:"&",onProgress:"&",onError:"&"},template:["<div class=\"uploader {{ component.variantClass }}\" ng-class=\"{ 'active': component.isActive, 'focus': component.hasFocus, 'error': component.ngModel.$invalid && (component.ngModel.$touched || component.ngModel.$$parentForm.$submitted) }\">",'<input name="{{ component.name }}" class="uploader-input" type="file" accept="{{ component.accept }}" ng-model="component.ngModel" ng-required="component.isRequired" ng-focus="component.hasFocus = true" ng-blur="component.hasFocus = false" onchange="angular.element(this).scope().onChange(this)" valid-file>','<div class="uploader-content" ng-style="{ \'background-image\': component.background }" ng-transclude></div>',"</div>"].join(""),controller:a,controllerAs:"component"},c=function(){return{require:"ngModel",link:function(a,b,c,d){b.bind("change",function(){a.$apply(function(){d.$setViewValue(b.val()),d.$render()})})}}};a.$inject=["$scope","$window"],angular.module("aeon-ui").directive("validFile",c).component("uiUploader",b)}();